/* Copyright (C) YOOtheme GmbH, http://www.gnu.org/licenses/gpl.html GNU/GPL */

(function($){var Plugin=function(){};$.extend(Plugin.prototype,{name:"follower",options:{activeClass:"active",hoveredClass:"isfollowing",slider:{"class":"fancyfollower",html:"<div></div>"},effect:{transition:"easeOutBack",duration:200}},initialize:function(element,options){this.options=$.extend({},this.options,options);var $this=this;element.css("position","relative");this.current=null;$(element.children()).each(function(){$(this).bind({mouseenter:function(e){$this.slider.stop();$this.slideTo($(this),"enter")},mouseleave:function(e){$this.slideTo($this.current,"leave")},click:function(e){$this.setCurrent($(this),true)}}).css({position:"relative"})});var tagname=element.children()[0].tagName.toLowerCase();element.append($("<"+tagname+">").addClass(this.options.slider["class"]).html(this.options.slider.html));this.slider=element.find(">"+tagname+":last");this.setCurrent(element.find("."+this.options.activeClass+":first"));if(this.current)this.startElement=this.current},setCurrent:function(el,effect){if(el.length&&!this.current){var offset=el.position();this.slider.css({left:offset.left,width:el.width(),height:el.height(),top:offset.top,opacity:1});effect?this.slider.fadeIn():this.slider.show()}if(this.current)this.current.removeClass(this.options.hoveredClass);if(el.length)this.current=el.addClass(this.options.hoveredClass);return this},slideTo:function(to,mode){if(!this.current)this.setCurrent(to);this.slider.stop().animate({left:to.position().left+"px",width:to.outerWidth()+"px",top:to.position().top+"px",height:to.outerHeight()+"px"},this.options.effect.duration,this.options.effect.transition);this.isHovered=mode=="leave"?false:true;if(mode=="leave"&&!this.startElement){var $this=this;window.setTimeout(function(){if(!$this.isHovered){$this.slider.fadeOut();$this.current=false}},200)}else{this.slider.css("opacity",1).fadeIn()}return this}});$.fn[Plugin.prototype.name]=function(){var args=arguments;var method=args[0]?args[0]:null;return this.each(function(){var element=$(this);if(Plugin.prototype[method]&&element.data(Plugin.prototype.name)&&method!="initialize"){element.data(Plugin.prototype.name)[method].apply(element.data(Plugin.prototype.name),Array.prototype.slice.call(args,1))}else if(!method||$.isPlainObject(method)){var plugin=new Plugin;if(Plugin.prototype["initialize"]){plugin.initialize.apply(plugin,$.merge([element],args))}element.data(Plugin.prototype.name,plugin)}else{$.error("Method "+method+" does not exist on jQuery."+Plugin.name)}})}})(jQuery);